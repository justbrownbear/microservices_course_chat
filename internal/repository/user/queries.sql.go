// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: queries.sql

package user_repository

import "context"

const createUser = `-- name: CreateUser :one
INSERT INTO public.users (nickname)
	VALUES ($1)
	RETURNING id
`

func (q *Queries) CreateUser(ctx context.Context, nickname string) (int64, error) {
	row := q.db.QueryRow(ctx, createUser, nickname)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const deleteUser = `-- name: DeleteUser :exec
UPDATE public.users
	SET
		is_deleted = TRUE,
		delete_timestamp = NOW()
	WHERE id = $1
`

func (q *Queries) DeleteUser(ctx context.Context, id int64) error {
	_, err := q.db.Exec(ctx, deleteUser, id)
	return err
}
